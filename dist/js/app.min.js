$("document").ready(function(){function t(t){h?delta=t.detail*-120:f?delta=-t.deltaY:delta=t.wheelDelta,1!=u&&(delta<=-p&&n(),delta>=p&&o())}function e(t,e){delta=e-t,1!=u&&(delta<=-p&&n(),delta>=p&&o())}function n(){u=!0,g!==w-1&&(g++,l()),r(v)}function o(){u=!0,0!==g&&g--,s(),r(v)}function a(t){if(g==t);else if(g>t)for(var e=g-t,i=0;i<e;i++)o();else if(g<t)for(var a=t-g,r=0;r<a;r++)n()}function r(t){setTimeout(function(){u=!1},t)}function l(){var t=$(".background").eq(g-1);t.removeClass("up-scroll").addClass("down-scroll")}function s(){var t=$(".background").eq(g);t.removeClass("down-scroll").addClass("up-scroll")}function d(t){t.style.opacity="0.1",t.innerHTML=k[c(0,k.length-1)],setTimeout(function(){t.style.opacity="1"},425),setTimeout(function(){d(t)},c(2e3,3600))}function c(t,e){return Math.floor(Math.random()*(e-t+1))+t}var u=!1,h=/Firefox/i.test(navigator.userAgent),f=/MSIE/i.test(navigator.userAgent)||/Trident.*rv\:11\./i.test(navigator.userAgent),p=30,v=600,g=0,w=$(".background").length,m=$(".goto");m.click(function(){a($(this).attr("id"))}),m.hover(function(){a($(this).attr("id"))});var y,C=h?"DOMMouseScroll":"wheel";window.addEventListener(C,$.throttle(60,t),!1),window.addEventListener("touchstart",function(t){y=t.touches[0].clientY},!1),window.addEventListener("touchend",function(t){var n=t.changedTouches[0].clientY;e(y,n)},!1);var k=["Gulp","Angular","Laravel","Node","Bower","Npm","Jquery","Typescript","Poo","Analytics","Addword","Composer"];window.addEventListener("load",function(){var t=window.document.getElementsByClassName("randoms");for(i=0;i<t.length;i++)d(t[i])},!1),$(".open-menu").on("click",function(){$(".overlay").addClass("open")}),$(".close-menu").on("click",function(){$(".overlay").removeClass("open")}),$("nav").on("click",function(){$(".overlay").removeClass("open")}),$(".expender").on("click",function(){$(this).hasClass("fullpage")?$(this).removeClass("fullpage"):$(this).addClass("fullpage")})}),Element.prototype.backgroundClipPolyfill=function(){function t(){return void 0!=r.style.webkitBackgroundClip}function e(t,e){for(var n in e)t.setAttribute(n,e[n])}function n(t){return a.createElementNS("http://www.w3.org/2000/svg",t)}function i(){var t=arguments[0],i=n("svg"),o=n("pattern"),a=n("image"),r=n("text");return e(o,{id:t.id,patternUnits:"userSpaceOnUse",width:t.width,height:t.height}),e(a,{width:t.width,height:t.height}),a.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",t.url),e(r,{x:0,y:80,class:t.class,style:"fill:url(#"+t.id+");"}),r.textContent=t.text,o.appendChild(a),i.appendChild(o),i.appendChild(r),i}var o=arguments[0],a=document,r=a.body,l=this;if(!t()){var s=new Image;s.onload=function(){var t=i({id:o.patternID,url:o.patternURL,class:o.class,width:this.width,height:this.height,text:l.textContent});l.parentNode.replaceChild(t,l)},s.src=o.patternURL}};var element=document.querySelector(".headline");element.backgroundClipPolyfill({patternID:"mypattern",patternURL:"http://timpietrusky.com/cdn/army.png",class:"headline"});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
