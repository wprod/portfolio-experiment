$("document").ready(function(){function t(t){h?delta=t.detail*-120:f?delta=-t.deltaY:delta=t.wheelDelta,1!=u&&(delta<=-p&&n(),delta>=p&&o())}function e(t,e){delta=e-t,1!=u&&(delta<=-p&&n(),delta>=p&&o())}function n(){u=!0,g!==w-1&&(g++,l()),a(v)}function o(){u=!0,0!==g&&g--,d(),a(v)}function r(t){if(g==t);else if(g>t)for(var e=g-t,i=0;i<e;i++)o();else if(g<t)for(var r=t-g,a=0;a<r;a++)n()}function a(t){setTimeout(function(){u=!1},t)}function l(){var t=$(".background").eq(g-1);t.removeClass("up-scroll").addClass("down-scroll")}function d(){var t=$(".background").eq(g);t.removeClass("down-scroll").addClass("up-scroll")}function c(t){t.style.opacity="0.1",t.innerHTML=k[s(0,k.length-1)],setTimeout(function(){t.style.opacity="1"},425),setTimeout(function(){c(t)},s(2e3,3600))}function s(t,e){return Math.floor(Math.random()*(e-t+1))+t}var u=!1,h=/Firefox/i.test(navigator.userAgent),f=/MSIE/i.test(navigator.userAgent)||/Trident.*rv\:11\./i.test(navigator.userAgent),p=30,v=600,g=0,w=$(".background").length,m=$(".goto");m.click(function(){r($(this).attr("id"))}),m.hover(function(){r($(this).attr("id"))});var y,C=h?"DOMMouseScroll":"wheel";window.addEventListener(C,$.throttle(60,t),!1),window.addEventListener("touchstart",function(t){y=t.touches[0].clientY},!1),window.addEventListener("touchend",function(t){var n=t.changedTouches[0].clientY;e(y,n)},!1);var k=["Gulp","Angular","Laravel","Node","Bower","Npm","Jquery","Typescript","Poo","Analytics","Addword","Composer"];window.addEventListener("load",function(){var t=window.document.getElementsByClassName("randoms");for(i=0;i<t.length;i++)c(t[i])},!1),$(".open-menu").on("click",function(){$(".overlay").addClass("open")}),$(".close-menu").on("click",function(){$(".overlay").removeClass("open")}),$("nav").on("click",function(){$(".overlay").removeClass("open")})}),Element.prototype.backgroundClipPolyfill=function(){function t(){return void 0!=a.style.webkitBackgroundClip}function e(t,e){for(var n in e)t.setAttribute(n,e[n])}function n(t){return r.createElementNS("http://www.w3.org/2000/svg",t)}function i(){var t=arguments[0],i=n("svg"),o=n("pattern"),r=n("image"),a=n("text");return e(o,{id:t.id,patternUnits:"userSpaceOnUse",width:t.width,height:t.height}),e(r,{width:t.width,height:t.height}),r.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",t.url),e(a,{x:0,y:80,class:t.class,style:"fill:url(#"+t.id+");"}),a.textContent=t.text,o.appendChild(r),i.appendChild(o),i.appendChild(a),i}var o=arguments[0],r=document,a=r.body,l=this;if(!t()){var d=new Image;d.onload=function(){var t=i({id:o.patternID,url:o.patternURL,class:o.class,width:this.width,height:this.height,text:l.textContent});l.parentNode.replaceChild(t,l)},d.src=o.patternURL}};var element=document.querySelector(".headline");element.backgroundClipPolyfill({patternID:"mypattern",patternURL:"http://timpietrusky.com/cdn/army.png",class:"headline"});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
